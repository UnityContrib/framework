<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnityContrib.UnityEditor</name>
    </assembly>
    <members>
        <member name="T:UnityContrib.UnityEditor.BaseEditorWindow">
            <summary>
            Base implementation for <see cref="T:UnityEngine.EditorWindow"/>.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.BaseEditorWindow.wasPlaying">
            <summary>
            A value indicating whether or not the project was playing in the last update.
            This is used to monitor if <see cref="P:OnPlayStarted"/> or <see cref="P:OnPlayStopped"/> should be called.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.BaseEditorWindow.lastPosition">
            <summary>
            The position and size of the window in the last update call.
            This is used to monitor if <see cref="P:OnMoved"/> or <see cref="P:OnResized"/> should be called.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnEnable">
            <summary>
            Called by Unity when window is enabled.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.Update">
            <summary>
            Called by Unity 100 times a second.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnGUI">
            <summary>
            Called by Unity when you should draw the controls of the window.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.CheckPlayingState">
            <summary>
            Calls <see cref="P:OnPlayStarted"/> if playing started and <see cref="P:OnPlayStopped"/> if stopped.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.CheckBoundaries">
            <summary>
            Calls <see cref="P:OnMoved"/> if window moved and <see cref="P:OnResized"/> if resized.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnPlayStarted">
            <summary>
            Called when the projected is started.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnPlayStopped">
            <summary>
            Called when the project is stopped.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnResized">
            <summary>
            Called when the window have resized.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.BaseEditorWindow.OnMoved">
            <summary>
            Called when the window have moved.
            </summary>
        </member>
        <member name="T:UnityContrib.UnityEditor.EditorApplicationEx">
            <summary>
            Provides a set of helper methods for working with the <see cref="T:UnityEditor.EditorApplication"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.EditorApplicationEx.editorApplicationType">
            <summary>
            The <see cref="T:SystemType"/> of <see cref="T:UnityEditor.EditorApplication"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.EditorApplicationEx.setSceneRepaintDirtyMethod">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo"/> of the <see cref="T:UnityEditor.EditorApplication.SetSceneRepaintDirty"/> method.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.EditorApplicationEx.SetSceneRepaintDirty">
            <summary>
            Flags repainting of the scene.
            </summary>
        </member>
        <member name="T:UnityContrib.UnityEditor.EditorGUIEx">
            <summary>
            Provides helper methods for working with the <see cref="T:UnityEngine.GUI"/> and <see cref="T:UnityEditor.EditorGUI"/> classes.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.EditorGUIEx.DrawRectangle(UnityEngine.Rect,UnityEngine.Color)">
            <summary>
            Draws a rectangle at the spcified <paramref name="rect"/> with the specified <paramref name="color"/>.
            </summary>
            <param name="rect">
            The position and size of the rectangle.
            </param>
            <param name="color">
            The color of the rectangle.
            </param>
        </member>
        <member name="T:UnityContrib.UnityEditor.EditorGUIUtilityEx">
            <summary>
            Provides a set of helper methods for working with GUI in the editor.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.EditorGUIUtilityEx.editorGuiUtilityType">
            <summary>
            The <see cref="T:SystemType"/> of <see cref="T:UnityEditor.EditorGUIUtility"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.EditorGUIUtilityEx.textContentMethod">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo"/> of the <see cref="T:UnityEditor.EditorGUIUtility.TextContent"/> method.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.EditorGUIUtilityEx.TextContent(System.String)">
            <summary>
            Returns the GUIContent from the Unity builtin resources with the specified <paramref name="name"/>.
            </summary>
            <param name="name">
            The name of the builtin resource.
            </param>
            <returns>
            The builtin text resource.
            </returns>
        </member>
        <member name="T:UnityContrib.UnityEditor.ShaderUtilEx">
            <summary>
            Provides a set of helper methods for working with the <see cref="T:UnityEngine.Shader"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.ShaderUtilEx.shaderUtilType">
            <summary>
            The <see cref="T:SystemType"/> of <see cref="T:UnityEditor.ShaderUtil"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.ShaderUtilEx.hasTangentChannelMethod">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo"/> of the <see cref="T:UnityEditor.ShaderUtil.HasTangentChannel"/> method.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.ShaderUtilEx.HasTangentChannel(UnityEngine.Shader)">
            <summary>
            Returns a value indicating if the specified <paramref name="shader"/> has a tangent channel.
            </summary>
            <param name="shader">
            The shader to query.
            </param>
            <returns>
            true if the shader has a tangent channel; otherwise false.
            </returns>
        </member>
        <member name="T:UnityContrib.UnityEditor.TerrainEx">
            <summary>
            Provides helper methods for working with the <see cref="T:UnityEngine.Terrain"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.TerrainEx.terrainType">
            <summary>
            The <see cref="T:SystemType"/> of <see cref="T:UnityEngine.Terrain"/> class.
            </summary>
        </member>
        <member name="F:UnityContrib.UnityEditor.TerrainEx.drawTreesAndFoliageField">
            <summary>
            The <see cref="T:System.Reflection.FieldInfo"/> of the <see cref="T:UnityEngine.Terrain.drawTreesAndFoliage"/> field.
            </summary>
        </member>
        <member name="M:UnityContrib.UnityEditor.TerrainEx.DrawTreesAndFoliage(UnityEngine.Terrain)">
            <summary>
            Returns a value indicating if tree and foliage is drawn on the specified <paramref name="terrain"/>.
            </summary>
            <param name="terrain">
            The <see cref="T:UnityEngine.Terrain"/> to query.
            </param>
            <returns>
            true if trees and foliage is drawn; otherwise false.
            </returns>
        </member>
        <member name="M:UnityContrib.UnityEditor.TerrainEx.DrawTreesAndFoliage(UnityEngine.Terrain,System.Boolean)">
            <summary>
            Assigns a value indicating if tree and foliage is drawn on the specified <paramref name="terrain"/>.
            </summary>
            <param name="terrain">
            The <see cref="T:UnityEngine.Terrain"/> to change.
            </param>
            <param name="value">
            true if trees and foliage is drawn; otherwise false.
            </param>
        </member>
    </members>
</doc>
